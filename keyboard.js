// This program is free software: you can redistribute it and/or modify it under
// the terms of the GNU General Public License as published by the Free Software
// Foundation, either version 3 of the License, or (at your option) any later
// version.
//
// This program is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
// details.
//
// You should have received a copy of the GNU General Public License along with
// this program. If not, see <https://www.gnu.org/licenses/>.

(function () {
  const KEY_PRESSED_SCANCODES = {
    "0": [0x45],
    "1": [0x16],
    "2": [0x1E],
    "3": [0x26],
    "4": [0x25],
    "5": [0x2E],
    "6": [0x36],
    "7": [0x3D],
    "8": [0x3E],
    "9": [0x46],
    "A": [0x1C],
    "Backspace": [0x66],
    "`": [0x0E],
    "B": [0x32],
    "CapsLock": [0x58],
    "C": [0x21],
    "ArrowDown": [0xE0, 0x72],
    "ArrowLeft": [0xE0, 0x6B],
    "ArrowRight": [0xE0, 0x74],
    "ArrowUp": [0xE0, 0x75],
    "Delete": [0xE0, 0x71],
    "D": [0x23],
    "End": [0xE0, 0x69],
    "Enter": [0x5A],
    "E": [0x24],
    "Escape": [0x76],
    "F10": [0x09],
    "F11": [0x78],
    "F12": [0x07],
    "F1": [0x05],
    "F2": [0x06],
    "F3": [0x04],
    "F4": [0x0C],
    "F5": [0x03],
    "F6": [0x0B],
    "F7": [0x83],
    "F8": [0x0A],
    "F9": [0x01],
    "F": [0x2B],
    "G": [0x34],
    "Home": [0xE0, 0x6C],
    "H": [0x33],
    "Insert": [0xE0, 0x70],
    "I": [0x43],
    "J": [0x3B],
    "K": [0x42],
    "Alt": [0x11],
    "Control": [0x14],
    "Shift": [0x12],
    "L": [0x4B],
    "M": [0x3A],
    "N": [0x31],
    "NumLock": [0x77],
    "ScrollLock": [0x7E],
    "O": [0x44],
    "PageDown": [0xE0, 0x7A],
    "PageUp": [0xE0, 0x7D],
    "PrintScreen": [0xE0, 0x12, 0xE0, 0x7C],
    "Pause": [0xE1, 0x14, 0x77, 0xE1, 0xF0, 0x14, 0xF0, 0x77],
    "P": [0x4D],
    ",": [0x41],
    ".": [0x49],
    "/": [0x4A],
    ";": [0x4C],
    "-": [0x4E],
    "'": [0x52],
    "[": [0x54],
    "=": [0x55],
    "]": [0x5B],
    "\\": [0x5D],
    "Q": [0x15],
    "R": [0x2D],
    " ": [0x29],
    "S": [0x1B],
    "Tab": [0x0D],
    "T": [0x2C],
    "U": [0x3C],
    "V": [0x2A],
    "W": [0x1D],
    "X": [0x22],
    "Y": [0x35],
    "Z": [0x1A],
  };

  const KEY_RELEASED_SCANCODES = {
    "0": [0xF0, 0x45],
    "1": [0xF0, 0x16],
    "2": [0xF0, 0x1E],
    "3": [0xF0, 0x26],
    "4": [0xF0, 0x25],
    "5": [0xF0, 0x2E],
    "6": [0xF0, 0x36],
    "7": [0xF0, 0x3D],
    "8": [0xF0, 0x3E],
    "9": [0xF0, 0x46],
    "A": [0xF0, 0x1C],
    "Backspace": [0xF0, 0x66],
    "`": [0xF0, 0x0E],
    "B": [0xF0, 0x32],
    "CapsLock": [0xF0, 0x58],
    "C": [0xF0, 0x21],
    "ArrowDown": [0xE0, 0xF0, 0x72],
    "ArrowLeft": [0xE0, 0xF0, 0x6B],
    "ArrowRight": [0xE0, 0xF0, 0x74],
    "ArrowUp": [0xE0, 0xF0, 0x75],
    "Delete": [0xE0, 0xF0, 0x71],
    "D": [0xF0, 0x23],
    "End": [0xE0, 0xF0, 0x69],
    "Enter": [0xF0, 0x5A],
    "E": [0xF0, 0x24],
    "Escape": [0xF0, 0x76],
    "F10": [0xF0, 0x09],
    "F11": [0xF0, 0x78],
    "F12": [0xF0, 0x07],
    "F1": [0xF0, 0x05],
    "F2": [0xF0, 0x06],
    "F3": [0xF0, 0x04],
    "F4": [0xF0, 0x0C],
    "F5": [0xF0, 0x03],
    "F6": [0xF0, 0x0B],
    "F7": [0xF0, 0x83],
    "F8": [0xF0, 0x0A],
    "F9": [0xF0, 0x01],
    "F": [0xF0, 0x2B],
    "G": [0xF0, 0x34],
    "Home": [0xE0, 0xF0, 0x6C],
    "H": [0xF0, 0x33],
    "Insert": [0xE0, 0xF0, 0x70],
    "I": [0xF0, 0x43],
    "J": [0xF0, 0x3B],
    "K": [0xF0, 0x42],
    "Alt": [0xF0, 0x11],
    "Control": [0xF0, 0x14],
    "Shift": [0xF0, 0x12],
    "L": [0xF0, 0x4B],
    "M": [0xF0, 0x3A],
    "N": [0xF0, 0x31],
    "NumLock": [0xF0, 0x77],
    "ScrollLock": [0xF0, 0x7E],
    "O": [0xF0, 0x44],
    "PageDown": [0xE0, 0xF0, 0x7A],
    "PageUp": [0xE0, 0xF0, 0x7D],
    "PrintScreen": [0xE0, 0xF0, 0x7C, 0xE0, 0xF0, 0x12],
    "P": [0xF0, 0x4D],
    "Q": [0xF0, 0x15],
    ",": [0xF0, 0x41],
    ".": [0xF0, 0x49],
    "/": [0xF0, 0x4A],
    ";": [0xF0, 0x4C],
    "-": [0xF0, 0x4E],
    "'": [0xF0, 0x52],
    "[": [0xF0, 0x54],
    "=": [0xF0, 0x55],
    "]": [0xF0, 0x5B],
    "\\": [0xF0, 0x5D],
    "R": [0xF0, 0x2D],
    " ": [0xF0, 0x29],
    "S": [0xF0, 0x1B],
    "Tab": [0xF0, 0x0D],
    "T": [0xF0, 0x2C],
    "U": [0xF0, 0x3C],
    "V": [0xF0, 0x2A],
    "W": [0xF0, 0x1D],
    "X": [0xF0, 0x22],
    "Y": [0xF0, 0x35],
    "Z": [0xF0, 0x1A]
  };

  const ShiftState = {
    Pressed: 'Pressed',
    Released: 'Released',
    Any: 'Any'
  };

  const KEY_NAMES = {
    "Alt": ["Alt", ShiftState.Any],
    "CapsLock": ["CapsLock", ShiftState.Any],
    "Control": ["Control", ShiftState.Any],
    "NumLock": ["NumLock", ShiftState.Any],
    "ScrollLock": ["ScrollLock", ShiftState.Any],
    "Enter": ["Enter", ShiftState.Any],
    "Tab": ["Tab", ShiftState.Any],
    " ": [" ", ShiftState.Any],
    "ArrowDown": ["ArrowDown", ShiftState.Any],
    "ArrowLeft": ["ArrowLeft", ShiftState.Any],
    "ArrowRight": ["ArrowRight", ShiftState.Any],
    "ArrowUp": ["ArrowUp", ShiftState.Any],
    "End": ["End", ShiftState.Any],
    "Home": ["Home", ShiftState.Any],
    "PageDown": ["PageDown", ShiftState.Any],
    "PageUp": ["PageUp", ShiftState.Any],
    "Backspace": ["Backspace", ShiftState.Any],
    "Delete": ["Delete", ShiftState.Any],
    "Insert": ["Insert", ShiftState.Any],
    "Escape": ["Escape", ShiftState.Any],
    "Pause": ["Pause", ShiftState.Any],
    "F1": ["F1", ShiftState.Any],
    "F2": ["F2", ShiftState.Any],
    "F3": ["F3", ShiftState.Any],
    "F4": ["F4", ShiftState.Any],
    "F5": ["F5", ShiftState.Any],
    "F6": ["F6", ShiftState.Any],
    "F7": ["F7", ShiftState.Any],
    "F8": ["F8", ShiftState.Any],
    "F9": ["F9", ShiftState.Any],
    "F10": ["F10", ShiftState.Any],
    "F11": ["F11", ShiftState.Any],
    "F12": ["F12", ShiftState.Any],
    "0": ["0", ShiftState.Released],
    ")": ["0", ShiftState.Pressed],
    "1": ["1", ShiftState.Released],
    "!": ["1", ShiftState.Pressed],
    "2": ["2", ShiftState.Released],
    "@": ["2", ShiftState.Pressed],
    "3": ["3", ShiftState.Released],
    "#": ["3", ShiftState.Pressed],
    "4": ["4", ShiftState.Released],
    "$": ["4", ShiftState.Pressed],
    "5": ["5", ShiftState.Released],
    "%": ["5", ShiftState.Pressed],
    "6": ["6", ShiftState.Released],
    "^": ["6", ShiftState.Pressed],
    "7": ["7", ShiftState.Released],
    "&": ["7", ShiftState.Pressed],
    "8": ["8", ShiftState.Released],
    "*": ["8", ShiftState.Pressed],
    "9": ["9", ShiftState.Released],
    "(": ["9", ShiftState.Pressed],
    "a": ["A", ShiftState.Released],
    "A": ["A", ShiftState.Pressed],
    "b": ["B", ShiftState.Released],
    "B": ["B", ShiftState.Pressed],
    "c": ["C", ShiftState.Released],
    "C": ["C", ShiftState.Pressed],
    "d": ["D", ShiftState.Released],
    "D": ["D", ShiftState.Pressed],
    "e": ["E", ShiftState.Released],
    "E": ["E", ShiftState.Pressed],
    "f": ["F", ShiftState.Released],
    "F": ["F", ShiftState.Pressed],
    "g": ["G", ShiftState.Released],
    "G": ["G", ShiftState.Pressed],
    "h": ["H", ShiftState.Released],
    "H": ["H", ShiftState.Pressed],
    "i": ["I", ShiftState.Released],
    "I": ["I", ShiftState.Pressed],
    "j": ["J", ShiftState.Released],
    "J": ["J", ShiftState.Pressed],
    "k": ["K", ShiftState.Released],
    "K": ["K", ShiftState.Pressed],
    "l": ["L", ShiftState.Released],
    "L": ["L", ShiftState.Pressed],
    "m": ["M", ShiftState.Released],
    "M": ["M", ShiftState.Pressed],
    "n": ["N", ShiftState.Released],
    "N": ["N", ShiftState.Pressed],
    "o": ["O", ShiftState.Released],
    "O": ["O", ShiftState.Pressed],
    "p": ["P", ShiftState.Released],
    "P": ["P", ShiftState.Pressed],
    "q": ["Q", ShiftState.Released],
    "Q": ["Q", ShiftState.Pressed],
    "r": ["R", ShiftState.Released],
    "R": ["R", ShiftState.Pressed],
    "s": ["S", ShiftState.Released],
    "S": ["S", ShiftState.Pressed],
    "t": ["T", ShiftState.Released],
    "T": ["T", ShiftState.Pressed],
    "u": ["U", ShiftState.Released],
    "U": ["U", ShiftState.Pressed],
    "v": ["V", ShiftState.Released],
    "V": ["V", ShiftState.Pressed],
    "w": ["W", ShiftState.Released],
    "W": ["W", ShiftState.Pressed],
    "x": ["X", ShiftState.Released],
    "X": ["X", ShiftState.Pressed],
    "y": ["Y", ShiftState.Released],
    "Y": ["Y", ShiftState.Pressed],
    "z": ["Z", ShiftState.Released],
    "Z": ["Z", ShiftState.Pressed],
    "`": ["`", ShiftState.Released],
    "~": ["`", ShiftState.Pressed],
    ",": [",", ShiftState.Released],
    "<": [",", ShiftState.Pressed],
    ".": [".", ShiftState.Released],
    ">": [".", ShiftState.Pressed],
    "/": ["/", ShiftState.Released],
    "?": ["/", ShiftState.Pressed],
    ";": [";", ShiftState.Released],
    ":": [";", ShiftState.Pressed],
    "-": ["-", ShiftState.Released],
    "_": ["-", ShiftState.Pressed],
    "'": ["'", ShiftState.Released],
    "\"": ["'", ShiftState.Pressed],
    "[": ["[", ShiftState.Released],
    "{": ["[", ShiftState.Pressed],
    "]": ["]", ShiftState.Released],
    "}": ["]", ShiftState.Pressed],
    "\\": ["\\", ShiftState.Released],
    "|": ["\\", ShiftState.Pressed],
    "=": ["=", ShiftState.Released],
    "+": ["=", ShiftState.Pressed],
  };

  class Keyboard {
    constructor() {
      this.shiftPressed = false;
    }

    getScanCodes(event) {
      let result = [];
      const keyName = KEY_NAMES[event.key];
      if (keyName) {
        const name = keyName[0];
        const shiftState = keyName[1];
        if (event.type == 'keydown') {
          switch (shiftState) {
            case ShiftState.Pressed:
              if (!this.shiftPressed) {
                result = KEY_PRESSED_SCANCODES["Shift"];
                this.shiftPressed = true;
              }
              break;
            case ShiftState.Released:
              if (this.shiftPressed) {
                result = KEY_RELEASED_SCANCODES["Shift"];
                this.shiftPressed = false;
              }
              break;
          }
          result = result.concat(KEY_PRESSED_SCANCODES[name]);
        } else {
          result = KEY_RELEASED_SCANCODES[name];
        }
      }
      return result;
    }
  }

  ToyPcEmulator.Keyboard = Keyboard;
})();
